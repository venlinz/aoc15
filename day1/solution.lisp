(require "utils" "../utils/utils.lisp")

(defvar *lines* (utils:read-lines "./input.txt"))
(if (null *lines*) (progn (format t "Empty file~%") (utils:exit)))

(defun part1(input)
  (let ((cur-floor 0))
    (dolist (line input)
      (dotimes (c (length line))
        (if (eql #\( (elt line c)) (setf cur-floor (1+ cur-floor)))
        (if (eql #\) (elt line c)) (setf cur-floor (1- cur-floor)))
        )
      )
    (format t "final floor: ~a~%" cur-floor)
    )
  )

(defun part2(input)
  (let ((cur-floor 0))
    (dolist (line input)
      (dotimes (c (length line))
        (if (eql #\( (elt line c)) (setf cur-floor (1+ cur-floor)))
        (if (eql #\) (elt line c)) (setf cur-floor (1- cur-floor)))
         (if (eql -1 cur-floor) (progn (format t "basement floor position: ~a~%" (1+ c)) (return)))
        )
      )
    )
  )

(part1 *lines*)
(part2 *lines*)
